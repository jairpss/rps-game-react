{"version":3,"sources":["components/Score.js","components/Header.js","components/Wrapper.js","components/Item.js","components/Button.js","components/Options.js","components/Rules.js","App.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","main","Header","WrapperStyled","Wrapper","children","colors","paper","base","border","rock","scissors","default","shadows","keyframes","ItemStyled","name","color","isShadowAnimated","Item","onClick","className","src","alt","ButtonStyled","WhiteButton","Button","props","elements","OptionsStyled","playing","Options","setScore","useState","results","setResults","housePick","setHousePick","setPlaying","pick","setPick","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playWithIA","RulesStyled","Rules","visible","setVisible","handleToggleClick","createContext","AppStyled","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e69f7619.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ScoreContext } from './../App'\r\n\r\nfunction Score() {\r\n    const { score } = useContext(ScoreContext)\r\n    return (\r\n        <ScoreStyled>\r\n            <small>SCORE</small>\r\n            <p>{score}</p>\r\n        </ScoreStyled>\r\n    )\r\n}\r\n\r\nconst ScoreStyled = styled.div`\r\n    background: #ffffff;\r\n    text-align: center;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    width: 80px;\r\n    small{\r\n        color: #2A45C2;\r\n        text-transform: uppercase;\r\n        letter-spacing: 2px;\r\n        font-size: 10px;\r\n    }\r\n    p{\r\n        color: #565468;\r\n        font-size: 40px;\r\n        margin: 0;\r\n        font-weight: 700;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n        padding: 10px 20px;\r\n        small{\r\n            font-size: 16px;\r\n        }\r\n        p{\r\n            font-size: 60px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Score\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Score from './Score'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>Rock<br/>Paper<br/>Scissors</h1>\r\n            <Score />\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nconst HeaderStyled = styled.main`\r\n  border: 3px solid rgba(255, 255, 255, .29);\r\n  color: #ffffff;\r\n  padding: 12px;\r\n  border-radius: .5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  h1{\r\n      font-size: 21px;\r\n      text-transform: uppercase;\r\n      line-height: 18px;\r\n      font-weight: 700;\r\n      margin:0;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 24px;\r\n    h1{\r\n      font-size: 36px;\r\n      line-height: .9;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Wrapper( { children } ) {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 700px;\r\n    margin: auto;\r\n`;\r\n\r\nexport default Wrapper\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst colors = {\r\n    paper: {\r\n      base: '#516ef4',\r\n      border: '#2543c3',\r\n    },\r\n    rock: {\r\n      base: '#de3a5a',\r\n      border: '#980e31',\r\n    },\r\n    scissors: {\r\n      base: '#eca81e',\r\n      border: '#c76c14',\r\n    },\r\n    default: {\r\n        base: 'trasparent',\r\n        border: 'trasparent',\r\n      }\r\n  }\r\n\r\nfunction Item({ name = 'default', onClick, isShadowAnimated = false  }) {\r\n    function handleClick(){\r\n        if (onClick) {\r\n            onClick(name)\r\n        } \r\n    }\r\n    const color = colors[name] \r\n    return (\r\n        <ItemStyled color={color} onClick={handleClick} name={name} isShadowAnimated={isShadowAnimated}>\r\n            <div className='shadow'>\r\n                <img src={`./images/icon-${name}.svg`} alt=\"\" />\r\n            </div>\r\n            \r\n        </ItemStyled>\r\n    )\r\n}\r\n\r\nconst shadows = keyframes`\r\n  to {\r\n    box-shadow: 0 0 0 40px rgba(255,255,255,.04), 0 0 0 80px rgba(255,255,255,.04), 0 0 0 120px rgba(255,255,255,.02);\r\n    transform:  scale(1.1);\r\n  }\r\n`\r\n\r\nconst ItemStyled = styled.div`\r\n    width: 130px;\r\n    height: 125px;\r\n    padding: ${({ name }) => (name === 'default') ? '16px' : '0'};\r\n    border: 16px solid ${({ color }) => color.base};\r\n    box-sizing: border-box;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #ffffff;\r\n    box-shadow: 0 5px 0 ${({ color }) => color.border};\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 2;\r\n    ${({ isShadowAnimated }) => isShadowAnimated && 'box-shadow: 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.02);'}\r\n    animation: 1s ${({ isShadowAnimated }) => isShadowAnimated ? shadows : ''} forwards;\r\n    &:active{\r\n        transform: scale(.9);\r\n    }\r\n    .shadow{\r\n        background: ${({ name }) => (name === 'default') ? '#122343' : 'white'};\r\n        box-shadow: 0 -4px 0 ${({ name }) => (name === 'default') ? 'transparent' : '#BABFD4'};\r\n        flex: 1;\r\n        align-self: stretch;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n`;\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Button({children, ...props}) {\r\n    return (\r\n        <ButtonStyled {...props}>\r\n            {children}\r\n        </ButtonStyled>\r\n    )\r\n}\r\n\r\nconst ButtonStyled = styled.div`\r\n    display: inline-flex;\r\n    border: 1px solid #ffffff;\r\n    border-radius: .5em;\r\n    min-width: 128px;\r\n    padding: .7em;\r\n    box-sizing: border-box;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    letter-spacing: .2em;\r\n    text-transform: uppercase;\r\n    &:hover{\r\n        background-color: white;\r\n        color: #131537;\r\n    }\r\n`;\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  background: white;\r\n  color: #101a3f;\r\n  min-width: 220px;\r\n`;\r\n\r\nexport default Button\r\n","import React, {useState, useContext} from 'react'\r\nimport styled from 'styled-components'\r\nimport Item from './Item'\r\nimport { WhiteButton } from './Button'\r\nimport { ScoreContext } from './../App'\r\n\r\nconst elements = [\r\n    'paper',\r\n    'scissors',\r\n    'rock',\r\n]\r\n\r\nfunction Options() {\r\n    const { score, setScore } = useContext(ScoreContext)\r\n    const [results, setResults] = useState('')\r\n    const [housePick, setHousePick] = useState('default')\r\n    const [playing, setPlaying] = useState(false);\r\n    const [pick, setPick] = useState('');\r\n    function getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    function launchHousePick() {\r\n        return new Promise((resolve, reject) => {\r\n          let pick\r\n          const interval = setInterval(() => {\r\n            pick = elements[getRandomInt(0, 3)]\r\n            setHousePick(pick)\r\n          }, 75)\r\n          setTimeout(() => {\r\n            clearInterval(interval)\r\n            resolve(pick)\r\n          }, 2000)\r\n        })\r\n    }\r\n    async function onClick(name) {\r\n        setPlaying(true)\r\n        setPick(name)\r\n        const house = await launchHousePick()\r\n        const results = playWithIA(name, house)\r\n        setResults(results)\r\n        if (results === 'win') {\r\n           setScore(score + 1)\r\n        }\r\n      }\r\n   \r\n    function playWithIA(pick, housePick) {\r\n        if (housePick === pick) {\r\n          return 'draw'\r\n        }\r\n        if (pick === 'paper') {\r\n          if (housePick === 'scissors') {\r\n            return 'lose'\r\n          }\r\n          if (housePick === 'rock') {\r\n            return 'win'\r\n          }\r\n        }\r\n        if (pick === 'scissors') {\r\n          if (housePick === 'paper') {\r\n            return 'win'\r\n          }\r\n          if (housePick === 'rock') {\r\n            return 'lose'\r\n          }\r\n        }\r\n        if (pick === 'rock') {\r\n          if (housePick === 'paper') {\r\n            return 'lose'\r\n          }\r\n          if (housePick === 'scissors') {\r\n            return 'win'\r\n          }\r\n        }\r\n    }\r\n\r\n    function handleTryAgainClick() {\r\n        setPlaying(false)\r\n        setResults('')\r\n    }\r\n    return (\r\n        <OptionsStyled playing={playing} results={(results !== '')}>\r\n            <span className=\"line\"></span>\r\n            {\r\n                !playing ? (\r\n                    <>\r\n                        <Item name='paper' onClick={onClick}/>\r\n                        <Item name='scissors' onClick={onClick}/> \r\n                        <Item name='rock' onClick={onClick}/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='in-game'>\r\n                            <Item playing={playing} name={pick} isShadowAnimated={(results === 'win')}/>\r\n                            <p>You Picked</p>\r\n                        </div>\r\n                        <div className='in-game'>\r\n                            <Item playing={playing} name={housePick} isShadowAnimated={(results === 'lose')}/>\r\n                            <p>The House Picked</p>\r\n                        </div>\r\n                        <div className=\"results\">\r\n                            {\r\n                                results && (\r\n                                    <>\r\n                                        <h2>YOU {results}</h2>\r\n                                        <WhiteButton onClick={handleTryAgainClick}>\r\n                                            Play Again\r\n                                        </WhiteButton>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </OptionsStyled>\r\n    )\r\n}\r\n\r\nconst OptionsStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 130px 130px;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    grid-gap: 30px 50px;\r\n    margin: 2em 0;\r\n    position: relative;\r\n    & div:nth-of-type(3) {\r\n        grid-column: span 2;\r\n    }\r\n    .in-game{\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n        font-size: large.8em;\r\n        letter-spacing: 1px;\r\n    }\r\n    .results {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      h2{\r\n          text-transform: uppercase;\r\n          font-size: 56px;\r\n          margin: 10px; \r\n      }\r\n    }\r\n    .line {\r\n    display: ${({ playing }) => !playing ? 'block' : 'none'};\r\n    height: 14px;\r\n    background: rgba(0,0,0,.2);\r\n    position: absolute;\r\n    width: 200px;\r\n    top: 58px;\r\n    &:before {\r\n      content: '';\r\n      height: 14px;\r\n      background: rgba(0,0,0,.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(60deg);\r\n      transform-origin: left top;\r\n    }\r\n    &:after {\r\n      content: '';\r\n      height: 14px;\r\n      background: rgba(0,0,0,.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(-60deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .line {\r\n      /* width: 300px; */\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default Options\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button'\r\n\r\nfunction Rules() {\r\n    const [visible, setVisible] = useState(false);\r\n    function handleToggleClick() {\r\n        setVisible(!visible)\r\n    }\r\n    return (\r\n        <RulesStyled>\r\n            {\r\n                (visible) && (\r\n                    <div className='rules-overlay'>\r\n                        <h2>Rules</h2>\r\n                        <img src=\"./images/image-rules.svg\" alt=\"Game Rules\" />\r\n                        <img className='close-btn' onClick={handleToggleClick} src=\"./images/icon-close.svg\" alt=\"Close Game Rules\" />\r\n                    </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick} className=\"button\">\r\n                Rules\r\n            </Button>\r\n        </RulesStyled>\r\n    )\r\n}\r\n\r\nconst RulesStyled = styled.div`\r\n    text-align:center;\r\n    .close-btn{\r\n        margin-top: 2em;\r\n        cursor: pointer;\r\n    }\r\n    .rules-overlay{\r\n        background-color: #ffffff;\r\n        padding: 4em 0; \r\n        position: fixed;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 2;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        h2 {\r\n        color: #3B4262;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n        margin-bottom: 1em;\r\n        }\r\n    }   \r\n    @media screen and (min-width: 768px) {\r\n        .button{\r\n            float: right;\r\n            position: fixed;\r\n            right: 2em;\r\n            bottom: 2em;\r\n        }\r\n        .rules-overlay{\r\n            width: 400px;\r\n            margin: auto;\r\n            border-radius: 10px;\r\n            top: 0;\r\n            bottom: initial;\r\n            transform: translateY(50%);\r\n            padding: 2em;\r\n            box-sizing:border-box;\r\n            h2{\r\n                font-size: 32px;\r\n                align-self: flex-start;\r\n                margin: 0 0 1.2em 0;\r\n            }\r\n        }\r\n        .close-btn{\r\n            position: absolute;\r\n            right: 2em;\r\n            top: .8em;\r\n        }\r\n        \r\n    }\r\n`;\r\n\r\nexport default Rules\r\n","import React, { createContext, useState } from 'react'\nimport './App.css';\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport Wrapper from './components/Wrapper'\nimport Options from './components/Options'\nimport Rules from './components/Rules'\n\nexport const ScoreContext = createContext();\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  return (\n    <ScoreContext.Provider value={{\n      score,\n      setScore\n    }}>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header />\n            <Options />\n            <Rules />\n          </div>  \n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n    \n  );\n}\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, #1F3757 20%, #131537 100%);\n  color: white;\n  font-family: 'Barlow Semi Condensed', sans-serif;\n  .app-content{\n    min-height: 100vh;\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 2em;\n  }\n  \n\n`;\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}